{"version":3,"sources":["index.js"],"names":["validationSchema","Yup","firstName","max","required","lastName","email","SignupForm","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","handleSubmit","htmlFor","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+KAAA,oEA4BMA,EAAmBC,IAAW,CAClCC,UAAWD,MACRE,IAAI,GAAI,iCACRC,SAAS,YACZC,SAAUJ,MACPE,IAAI,GAAI,iCACRC,SAAS,YACZE,MAAOL,MAAaK,MAAM,yBAAyBF,SAAS,cAGxDG,EAAa,WACjB,IAAMC,EAASC,YAAU,CACvBC,cAAe,CAAEJ,MAAO,GAAIJ,UAAW,GAAIG,SAAU,IACrDL,mBACAW,SAAU,SAACC,GACTC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,OAGvC,OACE,0BAAMD,SAAUH,EAAOQ,cACrB,2BAAOC,QAAQ,SAAf,iBACA,2BACEC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,SAAUb,EAAOc,aACjBC,OAAQf,EAAOgB,WACfC,MAAOjB,EAAOI,OAAON,QAEtBE,EAAOkB,QAAQpB,OAASE,EAAOmB,OAAOrB,MACrC,6BAAME,EAAOmB,OAAOrB,OAClB,KACJ,2BAAOW,QAAQ,cAAf,cACA,2BACEC,GAAG,YACHC,KAAK,YACLC,KAAK,OACLC,SAAUb,EAAOc,aACjBC,OAAQf,EAAOgB,WACfC,MAAOjB,EAAOI,OAAOV,YAEtBM,EAAOkB,QAAQxB,WAAaM,EAAOmB,OAAOzB,UACzC,6BAAMM,EAAOmB,OAAOzB,WAClB,KACJ,2BAAOe,QAAQ,aAAf,aACA,2BACEC,GAAG,WACHC,KAAK,WACLC,KAAK,OACLC,SAAUb,EAAOc,aACjBC,OAAQf,EAAOgB,WACfC,MAAOjB,EAAOI,OAAOP,WAEtBG,EAAOkB,QAAQrB,UAAYG,EAAOmB,OAAOtB,SACxC,6BAAMG,EAAOmB,OAAOtB,UAClB,KACJ,4BAAQe,KAAK,UAAb,YAKN,SAASQ,IACP,OAAO,kBAACrB,EAAD,MAGT,IAAMsB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAACL,EAAD,MAASC,I","file":"static/js/main.1f3f3e17.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useFormik } from \"formik\";\nimport \"./styles.css\";\nimport * as Yup from \"yup\";\n\n// const validate = (values) => {\n//   const errors = {};\n//   if (!values.email) {\n//     errors.email = \"Required\";\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = \"Invalid email address\";\n//   }\n//   if (!values.firstName) {\n//     errors.firstName = \"Required\";\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = \"Must be 15 characters or less\";\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = \"Required\";\n//     console.log(errors);\n//   } else if (values.lastName.length > 20) {\n//     errors.lastName = \"Must be 20 characters or less\";\n//   }\n\n//   return errors;\n// };\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string()\n    .max(15, \"Must be 15 characters or less\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .max(20, \"Must be 20 characters or less\")\n    .required(\"Required\"),\n  email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n});\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: { email: \"\", firstName: \"\", lastName: \"\" },\n    validationSchema,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      />\n      {formik.touched.email && formik.errors.email ? (\n        <div>{formik.errors.email}</div>\n      ) : null}\n      <label htmlFor=\"First name\">First name</label>\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstName}\n      />\n      {formik.touched.firstName && formik.errors.firstName ? (\n        <div>{formik.errors.firstName}</div>\n      ) : null}\n      <label htmlFor=\"Last name\">Last name</label>\n      <input\n        id=\"lastName\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.lastName}\n      />\n      {formik.touched.lastName && formik.errors.lastName ? (\n        <div>{formik.errors.lastName}</div>\n      ) : null}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nfunction App() {\n  return <SignupForm />;\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}